package fr.bipbipgaming.engine.io;

import static org.lwjgl.glfw.GLFW.*;
import org.lwjgl.glfw.GLFWCursorPosCallback;
import org.lwjgl.glfw.GLFWKeyCallback;
import org.lwjgl.glfw.GLFWMouseButtonCallback;

public class Input {
	
	private boolean[] keys = new boolean[GLFW_KEY_LAST];
	private boolean[] buttons = new boolean[GLFW_MOUSE_BUTTON_LAST];
	public double getMouseX() {
		return mouseX;
	}

	public void setMouseX(double mouseX) {
		this.mouseX = mouseX;
	}

	public double getMouseY() {
		return mouseY;
	}

	public void setMouseY(double mouseY) {
		this.mouseY = mouseY;
	}

	public GLFWKeyCallback getKeyboard() {
		return keyboard;
	}

	public void setKeyboard(GLFWKeyCallback keyboard) {
		this.keyboard = keyboard;
	}

	public GLFWCursorPosCallback getMouseMove() {
		return mouseMove;
	}

	public void setMouseMove(GLFWCursorPosCallback mouseMove) {
		this.mouseMove = mouseMove;
	}

	public GLFWMouseButtonCallback getMouseButtons() {
		return mouseButtons;
	}

	public void setMouseButtons(GLFWMouseButtonCallback mouseButtons) {
		this.mouseButtons = mouseButtons;
	}

	private double mouseX, mouseY;
	
	private GLFWKeyCallback keyboard;
	private GLFWCursorPosCallback mouseMove;
	private GLFWMouseButtonCallback mouseButtons;
	
	public Input() {
		
		keyboard = new GLFWKeyCallback() {
			
			@Override
			public void invoke(long window, int key, int scancode, int action, int mods) {
				keys[key] = (action != GLFW_RELEASE);
			}
		};
		
		mouseMove = new GLFWCursorPosCallback() {

			@Override
			public void invoke(long window, double xPos, double yPos) {
				
				mouseX = xPos;
				mouseY = yPos;
				
			}
		};
		
		mouseButtons = new GLFWMouseButtonCallback() {
			
			@Override
			public void invoke(long window, int button, int action, int mods) {
				buttons[button] = (action != GLFW_RELEASE);
			}

		};
		
	}
	
}
