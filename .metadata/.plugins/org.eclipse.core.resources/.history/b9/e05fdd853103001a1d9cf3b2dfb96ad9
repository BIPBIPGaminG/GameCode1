package fr.bipbipgaming.engine.objects;

import org.lwjgl.glfw.GLFW;

import fr.bipbipgaming.engine.io.Input;
import fr.bipbipgaming.engine.math.Vector3f;

public class Camera {
	
	private Vector3f position, rotation;
	private float moveSpeed = 0.04f;
	private double oldMouseX = 0, oldMouseY = 0, newMouseX, newMouseY;
	
	public Camera(Vector3f position, Vector3f rotation) {
		
		this.position = position;
		this.rotation = rotation;
		
	}
	
	public void update() {
		
		newMouseX = Input.getMouseX();
		newmouseY = Input.getMouseY();
		
		if (Input.isKeyDown(GLFW.GLFW_KEY_W)) position = Vector3f.add(position, new Vector3f(0, 0, -moveSpeed));
		if (Input.isKeyDown(GLFW.GLFW_KEY_A)) position = Vector3f.add(position, new Vector3f(-moveSpeed, 0, 0));
		if (Input.isKeyDown(GLFW.GLFW_KEY_S)) position = Vector3f.add(position, new Vector3f(0, 0, moveSpeed));
		if (Input.isKeyDown(GLFW.GLFW_KEY_D)) position = Vector3f.add(position, new Vector3f(moveSpeed, 0, 0));
		if (Input.isKeyDown(GLFW.GLFW_KEY_SPACE)) position = Vector3f.add(position, new Vector3f(0, moveSpeed, 0));
		if (Input.isKeyDown(GLFW.GLFW_KEY_LEFT_SHIFT)) position = Vector3f.add(position, new Vector3f(0, -moveSpeed, 0));
		
		float dx = (float) (newMouseX - oldMouseX);
		float dy = (float) (newMouseY - oldMouseY);
		
	}
	
	public Vector3f getPosition() {
		return position;
	}
	
	public Vector3f getRotation() {
		return rotation;
	}
	
}
